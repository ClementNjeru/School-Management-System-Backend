// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id            Int          @id @default(autoincrement())
  first_name    String
  last_name     String
  dob           DateTime
  gender        String
  Class         Class        @relation(fields: [classId], references: [id], onUpdate: Cascade)
  classId       Int
  guardianName  String?
  guardianPhone String?
  feeAmount     Decimal      @default(0)
  feePaid       Decimal      @default(0)
  feeBalance    Decimal      @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  FeePayment    FeePayment[]
}

model Teacher {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  phone      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Class      Class[]
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String
  email                String    @unique
  password             String
  role                 String
  activeStatus         Boolean   @default(true)
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime?
  superuser            Boolean   @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Class {
  id         Int          @id @default(autoincrement())
  name       String
  Teacher    Teacher      @relation(fields: [teacherId], references: [id], onUpdate: Cascade)
  teacherId  Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Student    Student[]
  FeePayment FeePayment[]
}

model FeePayment {
  id           Int      @id @default(autoincrement())
  Student      Student  @relation(fields: [studentId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  studentId    Int
  payment_mode String
  reference    String
  Class        Class    @relation(fields: [classId], references: [id], onUpdate: Cascade)
  classId      Int
  amount       Decimal
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model School {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  phone        String
  phone2       String?
  address      String
  address2     String?
  town         String
  school_motto String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
